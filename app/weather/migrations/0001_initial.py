# Generated by Django 3.2.9 on 2021-11-21 01:58

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='WeatherDesc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openweather_id', models.IntegerField()),
                ('main', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('icon', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'weather_desc',
            },
        ),
        migrations.CreateModel(
            name='WeatherForecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.CharField(max_length=255)),
                ('timezone_offset', models.IntegerField()),
                ('dt', models.BigIntegerField()),
                ('sunrise', models.BigIntegerField()),
                ('sunset', models.BigIntegerField()),
                ('moonrise', models.BigIntegerField()),
                ('moonset', models.BigIntegerField()),
                ('moon_phase', models.FloatField()),
                ('temp', models.FloatField()),
                ('temp_min', models.FloatField()),
                ('temp_max', models.FloatField()),
                ('temp_morn', models.FloatField()),
                ('temp_day', models.FloatField()),
                ('temp_eve', models.FloatField()),
                ('temp_night', models.FloatField()),
                ('feels_like', models.FloatField()),
                ('feels_like_morn', models.FloatField()),
                ('feels_like_day', models.FloatField()),
                ('feels_like_eve', models.FloatField()),
                ('feels_like_night', models.FloatField()),
                ('pressure', models.IntegerField()),
                ('humidity', models.IntegerField()),
                ('dew_point', models.FloatField()),
                ('uvi', models.FloatField()),
                ('clouds', models.IntegerField()),
                ('visibility', models.IntegerField()),
                ('wind_speed', models.FloatField()),
                ('wind_deg', models.IntegerField()),
                ('wind_gust', models.FloatField()),
                ('rain', models.FloatField()),
                ('rain_1h', models.FloatField()),
                ('precipitation', models.IntegerField()),
                ('pop', models.IntegerField()),
                ('type', models.IntegerField(choices=[(1, 'Current'), (2, 'Minutely'), (3, 'Hourly'), (4, 'Daily')])),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_forecast', to='location.location')),
                ('weather_desc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_forecast', to='weather.weatherdesc')),
            ],
            options={
                'db_table': 'weather_forecast',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='WeatherCurrent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timezone', models.IntegerField()),
                ('dt', models.BigIntegerField()),
                ('sunrise', models.BigIntegerField()),
                ('sunset', models.BigIntegerField()),
                ('temp', models.FloatField()),
                ('temp_min', models.FloatField()),
                ('temp_max', models.FloatField()),
                ('feels_like', models.FloatField()),
                ('pressure', models.IntegerField()),
                ('humidity', models.IntegerField()),
                ('clouds', models.IntegerField()),
                ('visibility', models.IntegerField()),
                ('wind_speed', models.FloatField()),
                ('wind_deg', models.IntegerField()),
                ('wind_gust', models.FloatField()),
                ('rain_1h', models.FloatField()),
                ('rain_3h', models.FloatField()),
                ('sea_level', models.IntegerField()),
                ('ground_level', models.IntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_current', to='location.location')),
                ('weather_desc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_current', to='weather.weatherdesc')),
            ],
            options={
                'db_table': 'weather_current',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
    ]
